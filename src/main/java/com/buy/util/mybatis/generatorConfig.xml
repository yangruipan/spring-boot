<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!--
        可以用于加载配置项或者配置文件，在整个配置文件中就可以使用${propertyKey}的方式来引用配置项
        resource：配置资源加载地址.classpath:com/java/*.java
        url：配置资源加载地质. www.baidu.com
        注意，两个属性只能选址一个;
        另外，如果使用了mybatis-generator-maven-plugin，那么在pom.xml中定义的properties都可以直接在generatorConfig.xml中使用  -->
    <properties resource="com/buy/util/mybatis/generatorConfig.properties"></properties>
    <!--
        在MBG工作的时候，需要额外加载的依赖包 location属性指明加载jar/zip包的全路径 -->
    <classPathEntry
            location="${mysqlLibPath}"/>
    <!--
        context:生成一组对象的环境
        id:必选，上下文id，用于在生成错误时提示
        defaultModelType:指定生成对象的样式
            1，conditional：类似hierarchical；
            2，flat：所有内容（主键，blob）等全部生成在一个对象中；
            3，hierarchical：主键生成一个XXKey对象(key class)，Blob等单独生成一个对象，其他简单属性在一个对象中(record class)
        targetRuntime:
            1，MyBatis3：默认的值，生成基于MyBatis3.x以上版本的内容，包括XXXBySample；
            2，MyBatis3Simple：类似MyBatis3，只是不生成XXXBySample；
        introspectedColumnImpl：类全限定名，用于扩展MBG
    -->
    <context id="DB2Tables" targetRuntime="MyBatis3">
        <!-- 自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表； 一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖 -->
        <property name="suppressTypeWarnings" value="true"/>
        <!--生成的pojo重写equals与hashCode-->
        <plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin"/>
        <!--生成的pojo实现Serializable-->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>
        <!--生成的pojo重写toString方法-->
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>
        <!--在XXXExample类中生成大小写敏感的LIKE方法-->
        <plugin type="org.mybatis.generator.plugins.CaseInsensitiveLikePlugin"/>
        <!--可以使用正则表达式的方式来重命名生成的XXXExample类-->
        <plugin type="org.mybatis.generator.plugins.RenameExampleClassPlugin">
            <property name="searchString" value="Example$"/>
            <property name="replaceString" value="Search"/>
        </plugin>
        <plugin type="com.buy.util.mybatis.plugin.SelectByExample"/>
        <commentGenerator>
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>
        <!--数据库信息-->
        <jdbcConnection driverClass="${driverClass}"
                        connectionURL="${connectionURL}"
                        userId="${userId}" password="${password}"/>
        <!--
            false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer
            true，把JDBC DECIMAL 和 NUMERIC 类型解析为java.math.BigDecimal -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>
        <!--
            Model 生成实体类的包名和位置
            targetPackage（存放路径）、targetProject（项目路径）
        -->
        <javaModelGenerator targetPackage="${modelPackage}" targetProject="${projectPath}">
            <property name="enableSubPackages" value="true"/>
            <!-- 从数据库返回的值被清理前后的空格-->
            <property name="trimStrings" value="true"/>
            <!--继承-->
            <property name="rootClass" value="com.buy.entity.bean.BeanBase"/>
        </javaModelGenerator>
        <!--
            Xml 映射文件包名和位置
            targetPackage（存放路径）、targetProject（项目路径）
        -->
        <sqlMapGenerator targetPackage="${xmlPackage}" targetProject="${projectPath}">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>
        <!--
            Dao
            targetPackage（存放路径）、targetProject（项目路径）
        -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="${mapperPackage}" targetProject="${projectPath}">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!--生成数据表-->
        <table tableName="f_division" domainObjectName="Division" enableUpdateByExample="true"
               enableDeleteByExample="true" selectByExampleQueryId="false"/>

    </context>
</generatorConfiguration>

